---
title: "PDF preview"
id: "pdf-preview-and-download"
sidebar_label: "PDF preview"
---
---
import PdfPreview from '/learn/assets/pdf-preview-and-download.png';

A PDF preview is a visual representation or a preview of the content of a PDF (Portable Document Format) file before opening or downloading the full document. It allows users to quickly view a snapshot of what the PDF contains without the need to open the file in a dedicated PDF viewer or reader application.

## Adding PDF Preview in a WaveMaker App

In today's digital world, displaying PDFs within a mobile app has become a common requirement. React Native, a popular JavaScript framework for building mobile applications, makes it relatively straightforward to integrate PDF previews. In this blog post, we'll explore how to add PDF preview functionality to a WaveMaker app using the `react-native-pdf` and `react-native-blob-util` libraries.

Create prefab that will handle pdf functional component. This prefab will use `react-native-pdf` and `react-native-blob` to reader pdf in WaveMaker app.
Please refer to this [page](https://docs.wavemaker.com/learn/react-native/custom-widget)


## Downloading PDFs in a WaveMaker App

Downloading PDFs is a common requirement in mobile applications, and React Native makes it relatively straightforward to implement this functionality. 
Here, you will see the process of downloading a PDF file in a WaveMaker app using the `rn-fetch-blob`.

Now, you can follow the steps below to `rn-fetch-blob` into a WaveMaker application.

### Adding rn-fetch-blob Plugin to your WaveMaker Appâ€‹

`rn-fetch-blob` can be installed in a few steps in a WaveMaker application. Please refer to this [page](https://docs.wavemaker.com/learn/react-native/third-party-expo-plugins#expo)
on how to install the plugin. Also, install the following `npm` packages in your WaveMaker application:

```javascript
npm i rn-fetch-blob
```

<img src={PdfPreview} style={{width:"35%"}} />

The following is the code snippet for the above mockup

```javascript 
var RNFetchBlob = require('rn-fetch-blob').default;

  Page.onReady = function () {};

  Page.downloadpdfTap = function ($event, widget) {
    const value = Page.Widgets.pdfurl.datavalue; //input value

    let dirs = RNFetchBlob.fs.dirs;
    
    const filename = value.substring(value.lastIndexOf('/') + 1, value.length);

    RNFetchBlob.config({
      fileCache: true,
      path: dirs.DownloadDir + '/' + filename,
      addAndroidDownloads: {
        notification: true,
        title: filename,
        mediaScannable: true,
      },
    })
      .fetch('GET', value, {})
      .then(res => {
        console.log('The file saved to ', res.path());
      })
      .catch(error => {
        console.error('Error creating directory:', error);
      });
  };

```


